# -*- coding: utf-8 -*-
"""Attribute_classifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1prdIi9syRBmaEz_4k0GlrlY47OFye1mV

# load library
"""
#torch
import torch
from torch import nn
import torch.nn.functional as F
import torchvision.transforms as transforms

#numpy
import numpy as np

#model
from attribute.layers import *

from attribute.resnest import *
from attribute.resnet import ResNet

#utility
from attribute.helpers import build_model_with_cfg
from PIL import Image

from util import *

"""# hyperparameter"""

image_size = 224

num_classes_category = 21
resume = './attribute/checkpoint/kfashion_category/model_category_best.pth.tar'

model_category = resnest50d(pretrained=False, nc=num_classes_category)
    
change_class_category = {
  0:"재킷",
  1:"조거팬츠",
  2:"짚업",
  3:"스커트",
  4:"가디건",
  5:"점퍼",
  6:"티셔츠",
  7:"셔츠",
  8:"팬츠",
  9:"드레스",
  10:"패딩",
  11:"청바지",
  12:"점프수트",
  13:"니트웨어",
  14:"베스트",
  15:"코트",
  16:"브라탑",
  17:"블라우스",
  18:"탑",
  19:"후드티",
  20:"레깅스"
}

"""#best model"""

checkpoint = torch.load(resume, map_location=torch.device('cpu'))

model_category.load_state_dict(checkpoint['state_dict'])

model_category.eval()

"""# define augmentation"""

normalize = transforms.Normalize(mean = model_category.image_normalization_mean, std = model_category.image_normalization_std)

val_transform = transforms.Compose([
    Warp(image_size),
    transforms.ToTensor(),
    normalize,
])

